#ifndef MATHSTACK_H
#define MATHSTACK_H
#include "DynIntStack.h"
#include<iostream>
using namespace std;
class MathStack:public DynIntStack
{
 //constructor
MathStack(): DynIntStack() {} 
 add(); 
  sub();
  mult();
  div();
int addAll();
int multAll();
} ;

//Addition Operation
void MathStack::add( )
{
 int num ;
 int sum;
 pop(sum);
 pop(num);
 sum+=num;
 push(sum);
}

//Subtraction Operation
void MathStack::sub()
{
  int num ;
 int diff;
 pop(diff);
 pop(num);
 diff-=num;
 push(diff);
} 

//Multiplicayion Operation
void MathStack::mult()
{
  int num ;
 int mult;
 pop(mult);
 pop(num);
 mult*=num;
 push(mult);
}

//Divide Operation
void MathStack::div()
{
 int num ;
 int div;
 pop(div);
 pop(num);
 div/=num;
 push(div);
}

//Addition of All values of MathStack
void addAll()
{
 int num ;
 int addAll;
 while(!top)
 {
  pop(addAll);
  pop(num);
  addAll+=num;
  push(addAll);
 }
 
}

//Multiplicayion of All the values of the MathStack
void multAll()
{
 int num ;
 int multAll;
 while(!top)
  {
      pop(multAll);
      pop(num);
     multAll*=num;
     push(multAll);
    }
}
#endif

//Driver program for testing 
int main()
{
 MathStack obj;
 for(int i=1;i<6;i++)
 obj.push(i);
 obj.addAll();
 obj.dsiplay();
}