  #include<iostream>
 #include<list>
 using namespace std;
 int main()
 {
 	double HRs,PR;
 	list<long int> empIds ;
	 list<long int>::iterator iter_empId;  
	 string input;
	 long int empId;
	 cout<<"Enter the employee IDs(press enter without input to terminate)"<<endl;
	 while(true)
	 {
       getline(cin,input );
	   if(input.empty())
	   {
		break;
	   }
	   try{
		empId=stol(input);
		empIds.push_back(empId);
	   }
	   catch(invalid_argument&e )
	   {
         cout<<"Invalid input. please enter a valid integer "<<endl;
	   }
	 }
 	list<int> hours ;
    list<double >payRate ;
	list<double >wages ;
	list <double>::iterator iter_wages;
	for(  iter_empId=empIds.begin();iter_empId!=empIds.end()  ;iter_empId++ )
	{
		cout<<"Enter the number of hours worked by the employee  "<<*iter_empId <<endl;
		cin>>HRs;
		hours.push_back(HRs) ;
		while(HRs<0)
		{
	     cout<<"Number of hours should not be negative"<<endl;
		 cout<<"Re-Enter the number of hours worked by the employee  "<<*iter_empId <<endl;
		 cin>>HRs;
		}
		cout<<"Enter the payRate of the employee "<<*iter_empId <<endl;
		cin>>PR;
		while( PR <15)
		{
			cout<<"payRate should not be less than 15"<<endl;
			cout<<"Re-Enter the payRate of the employee "<<*iter_empId <<endl;
		    cin>>PR;
		}
		wages.push_back( HRs *PR);
	 } 
	 for(iter_empId=empIds.begin(),iter_wages=wages.begin();iter_wages!=wages.end()&&iter_empId!=empIdsk.end();iter_empId++,iter_wages++ )
	 {
	 	cout<<"Employee Id: "<<*iter_empId <<endl;
	    cout<<"Gross pay: "<<*iter_wages <<endl;
	    cout<<endl;	
	  
      }	  
	 
 }